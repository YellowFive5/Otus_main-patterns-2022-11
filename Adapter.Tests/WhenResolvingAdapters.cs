#region Usings

using System.Numerics;
using Factory;
using FluentAssertions;
using Moq;
using Move;
using NUnit.Framework;

#endregion

namespace Adapter.Tests
{
    public class WhenResolvingAdapters : TestBase
    {
        [Test]
        public void MovableAdapterResolves()
        {
            IResolvable ioc = new IoC();
            var objectToMove = new Mock<IMovable>();

            var adapter = ioc.Resolve<IMovable>("Adapter", typeof(IMovable), objectToMove.Object);

            adapter.Should().BeOfType<AutoGeneratedMovableAdapter>();
        }

        [Test]
        public void PositionGetsWithMovableAdapter()
        {
            IResolvable ioc = new IoC();
            var objectToMove = new Mock<IMovable>();
            objectToMove.SetupProperty(o => o.Position);
            objectToMove.Object.Position = new Vector2(12, 5);
            var adapter = ioc.Resolve<IMovable>("Adapter", typeof(IMovable), objectToMove.Object);

            adapter.Position.Should().Be(new Vector2(12, 5));
        }

        [Test]
        public void VelocityGetsWithMovableAdapter()
        {
            IResolvable ioc = new IoC();
            var objectToMove = new Mock<IMovable>();
            objectToMove.Setup(o => o.Velocity).Returns(new Vector2(-7, 3));
            var adapter = ioc.Resolve<IMovable>("Adapter", typeof(IMovable), objectToMove.Object);

            adapter.Velocity.Should().Be(new Vector2(-7, 3));
        }
    }
}